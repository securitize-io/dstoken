/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../../common";

export interface ComplianceServiceLibraryInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "isOmnibusTBE"
      | "newPreTransferCheck"
      | "preIssuanceCheck"
      | "preTransferCheck"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "isOmnibusTBE",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "newPreTransferCheck",
    values: [
      AddressLike[],
      AddressLike,
      AddressLike,
      BigNumberish,
      BigNumberish,
      boolean
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "preIssuanceCheck",
    values: [AddressLike[], AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "preTransferCheck",
    values: [AddressLike[], AddressLike, AddressLike, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "isOmnibusTBE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "newPreTransferCheck",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "preIssuanceCheck",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "preTransferCheck",
    data: BytesLike
  ): Result;
}

export interface ComplianceServiceLibrary extends BaseContract {
  connect(runner?: ContractRunner | null): ComplianceServiceLibrary;
  waitForDeployment(): Promise<this>;

  interface: ComplianceServiceLibraryInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  isOmnibusTBE: TypedContractMethod<
    [_omnibusTBE: AddressLike, _from: AddressLike],
    [boolean],
    "view"
  >;

  newPreTransferCheck: TypedContractMethod<
    [
      _services: AddressLike[],
      _from: AddressLike,
      _to: AddressLike,
      _value: BigNumberish,
      _balanceFrom: BigNumberish,
      _paused: boolean
    ],
    [[bigint, string] & { code: bigint; reason: string }],
    "view"
  >;

  preIssuanceCheck: TypedContractMethod<
    [_services: AddressLike[], _to: AddressLike, _value: BigNumberish],
    [[bigint, string] & { code: bigint; reason: string }],
    "view"
  >;

  preTransferCheck: TypedContractMethod<
    [
      _services: AddressLike[],
      _from: AddressLike,
      _to: AddressLike,
      _value: BigNumberish
    ],
    [[bigint, string] & { code: bigint; reason: string }],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "isOmnibusTBE"
  ): TypedContractMethod<
    [_omnibusTBE: AddressLike, _from: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "newPreTransferCheck"
  ): TypedContractMethod<
    [
      _services: AddressLike[],
      _from: AddressLike,
      _to: AddressLike,
      _value: BigNumberish,
      _balanceFrom: BigNumberish,
      _paused: boolean
    ],
    [[bigint, string] & { code: bigint; reason: string }],
    "view"
  >;
  getFunction(
    nameOrSignature: "preIssuanceCheck"
  ): TypedContractMethod<
    [_services: AddressLike[], _to: AddressLike, _value: BigNumberish],
    [[bigint, string] & { code: bigint; reason: string }],
    "view"
  >;
  getFunction(
    nameOrSignature: "preTransferCheck"
  ): TypedContractMethod<
    [
      _services: AddressLike[],
      _from: AddressLike,
      _to: AddressLike,
      _value: BigNumberish
    ],
    [[bigint, string] & { code: bigint; reason: string }],
    "view"
  >;

  filters: {};
}
