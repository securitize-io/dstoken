/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestToken,
  TestTokenInterface,
} from "../../../contracts/mocks/TestToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "issueTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061071c806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063475a9fa911610066578063475a9fa91461014957806370a082311461015e57806395d89b4114610187578063a9059cbb146101a8578063dd62ed3e146101bb57600080fd5b806306fdde03146100a3578063095ea7b3146100e257806318160ddd1461010557806323b872dd1461011c578063313ce5671461012f575b600080fd5b6100cc6040518060400160405280600a8152602001692a32b9ba102a37b5b2b760b11b81525081565b6040516100d99190610585565b60405180910390f35b6100f56100f03660046105ef565b6101f4565b60405190151581526020016100d9565b61010e60025481565b6040519081526020016100d9565b6100f561012a366004610619565b610261565b610137600181565b60405160ff90911681526020016100d9565b61015c6101573660046105ef565b6103f8565b005b61010e61016c366004610655565b6001600160a01b031660009081526020819052604090205490565b6100cc60405180604001604052806002815260200161151560f21b81525081565b6100f56101b63660046105ef565b610442565b61010e6101c9366004610677565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061024f9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526020819052604081205482118015906102ac57506001600160a01b03841660009081526001602090815260408083203384529091529020548211155b61030d5760405162461bcd60e51b815260206004820152602760248201527f496e73756666696369656e742062616c616e6365206f7220616c6c6f77616e636044820152666520697373756560c81b60648201526084015b60405180910390fd5b6001600160a01b038316600090815260208190526040812080548492906103359084906106c0565b90915550506001600160a01b038416600090815260208190526040812080548492906103629084906106d3565b90915550506001600160a01b03841660009081526001602090815260408083203384529091528120805484929061039a9084906106d3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516103e691815260200190565b60405180910390a35060019392505050565b6001600160a01b038216600090815260208190526040812080548392906104209084906106c0565b92505081905550806002600082825461043991906106c0565b90915550505050565b600060406104518160046106c0565b36146104945760405162461bcd60e51b81526020600482015260126024820152712830bcb637b0b21039b4bd329032b93937b960711b6044820152606401610304565b336000908152602081905260409020548311156104ea5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610304565b33600090815260208190526040812080548592906105099084906106d3565b90915550506001600160a01b038416600090815260208190526040812080548592906105369084906106c0565b90915550506040518381526001600160a01b0385169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35060019392505050565b600060208083528351808285015260005b818110156105b257858101830151858201604001528201610596565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105ea57600080fd5b919050565b6000806040838503121561060257600080fd5b61060b836105d3565b946020939093013593505050565b60008060006060848603121561062e57600080fd5b610637846105d3565b9250610645602085016105d3565b9150604084013590509250925092565b60006020828403121561066757600080fd5b610670826105d3565b9392505050565b6000806040838503121561068a57600080fd5b610693836105d3565b91506106a1602084016105d3565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561025b5761025b6106aa565b8181038181111561025b5761025b6106aa56fea264697066735822122020d976e72685a36b2ce0e7eb9f899ddd2b5020c2b9c21de79020d12e306be20864736f6c63430008140033";

type TestTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestToken__factory extends ContractFactory {
  constructor(...args: TestTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestToken__factory {
    return super.connect(runner) as TestToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTokenInterface {
    return new Interface(_abi) as TestTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestToken {
    return new Contract(address, _abi, runner) as unknown as TestToken;
  }
}
