/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  TestCalls,
  TestCallsInterface,
} from "../../../contracts/mocks/TestCalls";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "byteArray1",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastMsgDataLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastMsgValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonPayable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "c",
        type: "bytes",
      },
    ],
    name: "receive1bytes",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "receive1uint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "receive2uints",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "uint1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uint2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405236600055346001556104eb8061001b6000396000f3fe6080604052600436106100865760003560e01c806388c7fb281161005957806388c7fb28146100ef578063a8d82ed214610111578063a8e996c614610132578063afd9ee1114610145578063eb61dc551461015b57600080fd5b8063463d1fca1461008b57806352da86d5146100b45780635e6feab4146100c357806371a9001c146100d9575b600080fd5b34801561009757600080fd5b506100a160015481565b6040519081526020015b60405180910390f35b6100c13660005534600155565b005b3480156100cf57600080fd5b506100a160025481565b3480156100e557600080fd5b506100a160005481565b3480156100fb57600080fd5b50610104610176565b6040516100ab919061021c565b6100c161011f36600461026a565b3660005534600155600291909155600355565b6100c16101403660046102a2565b610204565b34801561015157600080fd5b506100a160035481565b6100c1610169366004610353565b3660005534600155600255565b600480546101839061036c565b80601f01602080910402602001604051908101604052809291908181526020018280546101af9061036c565b80156101fc5780601f106101d1576101008083540402835291602001916101fc565b820191906000526020600020905b8154815290600101906020018083116101df57829003601f168201915b505050505081565b3660005534600155600461021882826103f5565b5050565b600060208083528351808285015260005b818110156102495785810183015185820160400152820161022d565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806040838503121561027d57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156102b457600080fd5b813567ffffffffffffffff808211156102cc57600080fd5b818401915084601f8301126102e057600080fd5b8135818111156102f2576102f261028c565b604051601f8201601f19908116603f0116810190838211818310171561031a5761031a61028c565b8160405282815287602084870101111561033357600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561036557600080fd5b5035919050565b600181811c9082168061038057607f821691505b6020821081036103a057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103f057600081815260208120601f850160051c810160208610156103cd5750805b601f850160051c820191505b818110156103ec578281556001016103d9565b5050505b505050565b815167ffffffffffffffff81111561040f5761040f61028c565b6104238161041d845461036c565b846103a6565b602080601f83116001811461045857600084156104405750858301515b600019600386901b1c1916600185901b1785556103ec565b600085815260208120601f198616915b8281101561048757888601518255948401946001909101908401610468565b50858210156104a55787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212204f5038f14bced5e7a55048ba5b44651c13b47b7dcd3de86dbb0c4942846e333464736f6c63430008140033";

type TestCallsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestCallsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestCalls__factory extends ContractFactory {
  constructor(...args: TestCallsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestCalls & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestCalls__factory {
    return super.connect(runner) as TestCalls__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCallsInterface {
    return new Interface(_abi) as TestCallsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestCalls {
    return new Contract(address, _abi, runner) as unknown as TestCalls;
  }
}
