/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDSLockManagerPartitioned,
  IDSLockManagerPartitionedInterface,
} from "../../../contracts/compliance/IDSLockManagerPartitioned";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "investorId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "reason",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reasonString",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "partition",
        type: "bytes32",
      },
    ],
    name: "HolderLockedPartition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "investorId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "reason",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reasonString",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "partition",
        type: "bytes32",
      },
    ],
    name: "HolderUnlockedPartition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "reason",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reasonString",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "partition",
        type: "bytes32",
      },
    ],
    name: "LockedPartition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "reason",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reasonString",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "partition",
        type: "bytes32",
      },
    ],
    name: "UnlockedPartition",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_valueLocked",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_reason",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_releaseTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "addManualLockRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_investorId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_valueLocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reasonCode",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_reasonString",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_releaseTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "createLockForHolder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_investorId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_valueLocked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reasonCode",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_reasonString",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_releaseTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "createLockForInvestor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "getTransferableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_holderId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "getTransferableTokensForHolder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_investorId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "getTransferableTokensForInvestor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "lockCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_holderId",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "lockCountForHolder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_investorId",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "lockCountForInvestor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lockIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "lockInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "reasonCode",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reasonString",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "autoReleaseTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_holderId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_lockIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "lockInfoForHolder",
    outputs: [
      {
        internalType: "uint256",
        name: "reasonCode",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reasonString",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "autoReleaseTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_investorId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_lockIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "lockInfoForInvestor",
    outputs: [
      {
        internalType: "uint256",
        name: "reasonCode",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reasonString",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "autoReleaseTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lockIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "removeLockRecord",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_investorId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_lockIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "removeLockRecordForHolder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_investorId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_lockIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_partition",
        type: "bytes32",
      },
    ],
    name: "removeLockRecordForInvestor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDSLockManagerPartitioned__factory {
  static readonly abi = _abi;
  static createInterface(): IDSLockManagerPartitionedInterface {
    return new Interface(_abi) as IDSLockManagerPartitionedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDSLockManagerPartitioned {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IDSLockManagerPartitioned;
  }
}
