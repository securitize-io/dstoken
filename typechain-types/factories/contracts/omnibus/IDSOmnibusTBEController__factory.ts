/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDSOmnibusTBEController,
  IDSOmnibusTBEControllerInterface,
} from "../../../contracts/omnibus/IDSOmnibusTBEController";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "totalDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "accreditedDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "usAccreditedDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "usTotalDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "jpTotalDelta",
        type: "int256",
      },
      {
        internalType: "bytes32[]",
        name: "euRetailCountries",
        type: "bytes32[]",
      },
      {
        internalType: "int256[]",
        name: "euRetailCountryDeltas",
        type: "int256[]",
      },
    ],
    name: "adjustCounters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalInvestors",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accreditedInvestors",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usAccreditedInvestors",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usTotalInvestors",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jpTotalInvestors",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "euRetailCountries",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "euRetailCountryCounts",
        type: "uint256[]",
      },
    ],
    name: "bulkBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "issuanceTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalInvestors",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accreditedInvestors",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usAccreditedInvestors",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usTotalInvestors",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jpTotalInvestors",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "euRetailCountries",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "euRetailCountryCounts",
        type: "uint256[]",
      },
    ],
    name: "bulkIssuance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "wallets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "bulkTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOmnibusWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_omnibusWallet",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isPartitionedToken",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDSOmnibusTBEController__factory {
  static readonly abi = _abi;
  static createInterface(): IDSOmnibusTBEControllerInterface {
    return new Interface(_abi) as IDSOmnibusTBEControllerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDSOmnibusTBEController {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IDSOmnibusTBEController;
  }
}
