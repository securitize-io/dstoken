/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  OmnibusControllerDataStore,
  OmnibusControllerDataStoreInterface,
} from "../../../contracts/data-stores/OmnibusControllerDataStore";

const _abi = [
  {
    inputs: [],
    name: "omnibusWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060918061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80636bbb088614602d575b600080fd5b600154603f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f3fea26469706673582212204d01fed67e6e569f2b5c9e4c7d2730e75fbe0f7a5f683dcc2581d920b8363a3c64736f6c63430008140033";

type OmnibusControllerDataStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OmnibusControllerDataStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OmnibusControllerDataStore__factory extends ContractFactory {
  constructor(...args: OmnibusControllerDataStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OmnibusControllerDataStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OmnibusControllerDataStore__factory {
    return super.connect(runner) as OmnibusControllerDataStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OmnibusControllerDataStoreInterface {
    return new Interface(_abi) as OmnibusControllerDataStoreInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OmnibusControllerDataStore {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OmnibusControllerDataStore;
  }
}
