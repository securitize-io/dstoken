/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ComplianceConfigurationDataStore,
  ComplianceConfigurationDataStoreInterface,
} from "../../../contracts/data-stores/ComplianceConfigurationDataStore";

const _abi = [
  {
    inputs: [],
    name: "authorizedSecurities",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockFlowbackEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "countriesCompliances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disallowBackDating",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "euRetailInvestorsLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "forceAccredited",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "forceAccreditedUS",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "forceFullTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jpInvestorsLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxUSInvestorsPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumHoldingsPerInvestor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minEUTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minUSTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumHoldingsPerInvestor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumTotalInvestors",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonAccreditedInvestorsLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonUSLockPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalInvestorsLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usAccreditedInvestorsLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usInvestorsLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usLockPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWideForceFullTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610373806100206000396000f3fe608060405234801561001057600080fd5b50600436106101405760003560e01c8063978bd864116100b8578063bf0f44b31161007c578063bf0f44b31461023c578063cc291b8d14610245578063ce9c15071461024e578063ee93d60814610257578063ef331a3914610264578063ff5b647a1461026d57600080fd5b8063978bd86414610202578063a30b9a2014610214578063aa7484df1461021d578063aca33dcd1461022a578063b378062d1461023357600080fd5b8063476115111161010a57806347611511146101aa5780634d3894d3146101d5578063573ffe8e146101de5780635fde47a9146101e757806385e13880146101f05780638a469299146101f957600080fd5b80621d162214610145578062b55e4a1461016157806322abf8e51461018557806339d49753146101985780633ca6956c146101a1575b600080fd5b61014e600a5481565b6040519081526020015b60405180910390f35b601154610175906301000000900460ff1681565b6040519015158152602001610158565b6011546101759062010000900460ff1681565b61014e60045481565b61014e60055481565b61014e6101b836600461028c565b805160208183018101805160018252928201919093012091525481565b61014e60095481565b61014e60075481565b61014e600f5481565b61014e600e5481565b61014e60025481565b60115461017590610100900460ff1681565b61014e600d5481565b6013546101759060ff1681565b61014e60035481565b61014e60085481565b61014e600c5481565b61014e60065481565b61014e60105481565b6011546101759060ff1681565b61014e60125481565b61014e600b5481565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561029e57600080fd5b813567ffffffffffffffff808211156102b657600080fd5b818401915084601f8301126102ca57600080fd5b8135818111156102dc576102dc610276565b604051601f8201601f19908116603f0116810190838211818310171561030457610304610276565b8160405282815287602084870101111561031d57600080fd5b82602086016020830137600092810160200192909252509594505050505056fea264697066735822122033038f5ab602665a569adfe40748c67201f12585382ae5d7d53bfdd07dbf2ddb64736f6c63430008140033";

type ComplianceConfigurationDataStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComplianceConfigurationDataStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComplianceConfigurationDataStore__factory extends ContractFactory {
  constructor(...args: ComplianceConfigurationDataStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ComplianceConfigurationDataStore & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ComplianceConfigurationDataStore__factory {
    return super.connect(runner) as ComplianceConfigurationDataStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComplianceConfigurationDataStoreInterface {
    return new Interface(_abi) as ComplianceConfigurationDataStoreInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ComplianceConfigurationDataStore {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ComplianceConfigurationDataStore;
  }
}
