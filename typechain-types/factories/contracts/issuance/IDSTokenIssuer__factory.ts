/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDSTokenIssuer,
  IDSTokenIssuerInterface,
} from "../../../contracts/issuance/IDSTokenIssuer";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCREDITED",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "KYC_APPROVED",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "QUALIFIED",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_issuanceValues",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_reason",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "_locksValues",
        type: "uint256[]",
      },
      {
        internalType: "uint64[]",
        name: "_lockReleaseTimes",
        type: "uint64[]",
      },
      {
        internalType: "string",
        name: "_collisionHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "_country",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "attributeValues",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "attributeExpirations",
        type: "uint256[]",
      },
    ],
    name: "issueTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDSTokenIssuer__factory {
  static readonly abi = _abi;
  static createInterface(): IDSTokenIssuerInterface {
    return new Interface(_abi) as IDSTokenIssuerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDSTokenIssuer {
    return new Contract(address, _abi, runner) as unknown as IDSTokenIssuer;
  }
}
