/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDSWalletRegistrar,
  IDSWalletRegistrarInterface,
} from "../../../contracts/registry/IDSWalletRegistrar";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_id",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_wallets",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "_collisionHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "_country",
        type: "string",
      },
      {
        internalType: "uint8[]",
        name: "_attributeIds",
        type: "uint8[]",
      },
      {
        internalType: "uint256[]",
        name: "_attributeValues",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_attributeExpirations",
        type: "uint256[]",
      },
    ],
    name: "registerWallet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDSWalletRegistrar__factory {
  static readonly abi = _abi;
  static createInterface(): IDSWalletRegistrarInterface {
    return new Interface(_abi) as IDSWalletRegistrarInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDSWalletRegistrar {
    return new Contract(address, _abi, runner) as unknown as IDSWalletRegistrar;
  }
}
